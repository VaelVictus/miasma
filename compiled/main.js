!function(window,document){"use strict";const state={slider:null,dom:null,notesController:null,currentFolder:"",variety:{groups:new Map,folderToGroup:new Map}};function getByIdRequired(id,description=`#${id}`){const element=document.getElementById(id);if(!element)throw new Error(`Miasma viewer is missing the required element: ${description}`);return element}function safeAddListener(element,event,handler){element?element.addEventListener(event,handler):console.warn(`Miasma viewer skipped binding for ${event} â€“ element missing.`)}function updateButtons(slider){if(!state.dom)return;const{controls:controls}=state.dom;[[controls.prevButton,slider.prev_item_index],[controls.nextButton,slider.next_item_index],[controls.prevSlide,slider.prev_item_index],[controls.nextSlide,slider.next_item_index]].forEach((([element,slideIndex])=>{if(!element)return;const targetSlide=slider.slider_items[slideIndex];targetSlide&&(element.innerHTML=targetSlide.innerHTML)})),$(".slider-item:visible .zoom").magnify({speed:0,magnify:1.5})}class Slider{constructor(sliderElement,options={}){this.slider=sliderElement,this.slider_items=sliderElement.getElementsByClassName("slider-item"),this.visible_indices=Array.from(this.slider_items).map(((_,index)=>index)),this.current_index=0,this.is_sliding=!1,this.options=Object.assign({containers:{},controls:{},onSlideComplete:null,onFolderChange:null},options),this.setIndices(),this.showSlide(this.current_index)}setIndices(){const visibleCount=this.visible_indices.length,currentVisibleIndex=this.visible_indices.indexOf(this.current_index);this.prev_item_index=this.visible_indices[(currentVisibleIndex-1+visibleCount)%visibleCount],this.next_item_index=this.visible_indices[(currentVisibleIndex+1)%visibleCount],this.preloadImages()}preloadImages(){const preload=index=>{const img=this.slider_items[index]?.querySelector("img");img&&img.hasAttribute("loading")&&img.removeAttribute("loading")};preload(this.prev_item_index),preload(this.next_item_index)}slide(direction){if(this.is_sliding)return;const nextIndex="NEXT"===direction?this.next_item_index:this.prev_item_index,actionClasses="NEXT"===direction?["next-item","slide-next"]:["prev-item","slide-prev"],incomingSlide=this.slider_items[nextIndex],activeSlide=this.slider_items[this.current_index];if(!incomingSlide||!activeSlide)return;this.is_sliding=!0;incomingSlide.classList.add(actionClasses[0],"active"),activeSlide.classList.add(actionClasses[1]),window.setTimeout((()=>{incomingSlide.classList.remove(actionClasses[0]),activeSlide.classList.remove(actionClasses[1],"active"),this.current_index=nextIndex,this.showSlide(this.current_index),this.is_sliding=!1,this.setIndices()}),16)}next(){-1!==this.visible_indices.indexOf(this.next_item_index)&&this.slide("NEXT")}prev(){-1!==this.visible_indices.indexOf(this.prev_item_index)&&this.slide("PREV")}searchFolder(folderName){const{sliderContainer:sliderContainer,mobileView:mobileView,chooseMiasma:chooseMiasma,notes:notes}=this.options.containers;if(!folderName)return sliderContainer&&(sliderContainer.style.display="none"),mobileView&&(mobileView.style.display="none"),notes&&(notes.style.display="none"),chooseMiasma&&(chooseMiasma.style.display="block"),this.visible_indices=Array.from(this.slider_items).map(((_,index)=>index)),this.current_index=0,this.showSlide(this.current_index),this.setIndices(),void this.options.onFolderChange?.(folderName,this);sliderContainer&&(sliderContainer.style.display="flex"),mobileView&&(mobileView.style.display="flex"),notes&&(notes.style.display="block"),chooseMiasma&&(chooseMiasma.style.display="none"),this.visible_indices=[],Array.from(this.slider_items).forEach(((slide,index)=>{slide.getAttribute("data-folder")===folderName||"all"===folderName?(this.visible_indices.push(index),slide.style.display=""):slide.style.display="none"})),this.visible_indices.length?(this.current_index=this.visible_indices[0],this.setIndices(),this.showSlide(this.current_index),this.updateNavigationButtons(folderName),this.options.onFolderChange?.(folderName,this)):console.error(`No slides found for the folder "${folderName}".`)}updateNavigationButtons(folderName){const controls=this.options.controls||{},isSingleSlide=["hislatitude","incineration","frontispiece","vaseandcup"].includes(folderName),toggleButton=(button,disabled)=>{button&&(button.classList.toggle("disabled-button",disabled),button.style.display=disabled?"none":"")};toggleButton(controls.prevButton,isSingleSlide),toggleButton(controls.nextButton,isSingleSlide),toggleButton(controls.prevSlide,isSingleSlide),toggleButton(controls.nextSlide,isSingleSlide)}showSlide(index){Array.from(this.slider_items).forEach((slide=>{slide.classList.remove("active"),slide.style.display="none"}));const targetSlide=this.slider_items[index];targetSlide?(targetSlide.classList.add("active"),targetSlide.style.display="block",this.current_index=index,this.options.onSlideComplete?.(this)):console.error("Slide with specified index does not exist:",index)}}function cacheDom(){return{slider:function(selector,description=selector){const element=document.querySelector(selector);if(!element)throw new Error(`Miasma viewer is missing the required element: ${description} (${selector})`);return element}(".slider","main slider"),sliderContainer:getByIdRequired("slider_container"),mobileView:getByIdRequired("mobile_view"),chooseMiasma:getByIdRequired("choose_miasma"),notes:getByIdRequired("notes"),gameNotes:getByIdRequired("game_notes"),folderSelect:getByIdRequired("folderSelect"),varietySwitcher:getByIdRequired("variety_switcher"),switchVariety:document.getElementById("switch_variety"),controls:{prevButton:document.getElementById("prev_button"),nextButton:document.getElementById("next_button"),prevSlide:document.getElementById("prevSlide"),nextSlide:document.getElementById("nextSlide")},tabs:{game:document.getElementById("game_notes_tab"),player:document.getElementById("player_notes_tab")}}}function toggleVarietySwitcher(folder){const switcher=state.dom.varietySwitcher;if(!switcher)return;const groupKey=state.variety.folderToGroup.get(folder);if(groupKey){const group=state.variety.groups.get(groupKey);if(group&&group.entries.length>1)return switcher.style.display="block",void function(folder){const button=state.dom.switchVariety;if(!button)return;const groupKey=state.variety.folderToGroup.get(folder);if(!groupKey)return void(button.textContent="Switch Variety");const group=state.variety.groups.get(groupKey);if(!group||group.entries.length<2)return void(button.textContent="Switch Variety");const nextIndex=(group.currentIndex+1)%group.entries.length,nextEntry=group.entries[nextIndex];button.textContent=`View ${nextEntry.label}`}(folder)}switcher.style.display="none"}function setCurrentFolder(folder,{updateHistory:updateHistory=!0}={}){if(!state.slider)return;const normalizedFolder=folder||"";if(state.currentFolder=normalizedFolder,state.slider.searchFolder(normalizedFolder),function(folder){const select=state.dom.folderSelect;if(!select)return;if(Array.from(select.options).some((option=>option.value===folder)))return select.value=folder,void delete select.dataset.activeVariety;const groupKey=state.variety.folderToGroup.get(folder);if(!groupKey)return select.value="",void delete select.dataset.activeVariety;const group=state.variety.groups.get(groupKey);group&&group.entries.length&&(select.value=group.entries[0].folder,select.dataset.activeVariety=folder)}(normalizedFolder),function(folder){const groupKey=state.variety.folderToGroup.get(folder);if(!groupKey)return;const group=state.variety.groups.get(groupKey);if(!group)return;const index=group.entries.findIndex((entry=>entry.folder===folder));group.currentIndex=-1===index?0:index}(normalizedFolder),toggleVarietySwitcher(normalizedFolder),normalizedFolder&&async function(miasma){const{gameNotes:gameNotes}=state.dom;if(!gameNotes)return;state.notesController&&state.notesController.abort();const controller=new AbortController;state.notesController=controller;try{const response=await fetch(`trottering_notes.php?miasma=${encodeURIComponent(miasma)}`,{signal:controller.signal});if(!response.ok)throw new Error(`Request failed with status ${response.status}`);const notesMarkup=await response.text();controller.signal.aborted||(gameNotes.innerHTML=notesMarkup)}catch(error){if(controller.signal.aborted)return;console.error(`Failed to load notes for "${miasma}":`,error),gameNotes.innerHTML='<p class="notes-error">Notes failed to load. Please try again.</p>'}finally{state.notesController===controller&&(state.notesController=null)}}(normalizedFolder),document.body.setAttribute("data-current-miasma",normalizedFolder),updateHistory){const path=normalizedFolder?`/miasma/${normalizedFolder}`:"/miasma/";history.pushState({folder:normalizedFolder},"",path)}}function switchVariety(){const currentFolder=state.currentFolder,groupKey=state.variety.folderToGroup.get(currentFolder);if(!groupKey)return;const group=state.variety.groups.get(groupKey);if(!group||group.entries.length<2)return;const nextIndex=(group.currentIndex+1)%group.entries.length;setCurrentFolder(group.entries[nextIndex].folder)}function openTab(evt,tabName){const{tabs:tabs}=state.dom;tabs&&("game_notes"===tabName?($("#game_notes").show(),tabs.game?.classList.add("active"),$("#player_notes").hide(),tabs.player?.classList.remove("active")):"player_notes"===tabName&&($("#game_notes").hide(),tabs.game?.classList.remove("active"),$("#player_notes").show(),tabs.player?.classList.add("active")))}function handlePopState(event){setCurrentFolder(window.location.pathname.replace(/\/$/,"").split("/miasma/")[1]||"",{updateHistory:!1})}document.addEventListener("DOMContentLoaded",(function(){state.dom=cacheDom(),function(){const{slider:slider}=state.dom,sliderItems=slider.querySelectorAll(".slider-item[data-variety-group]"),groups=new Map,folderToGroup=new Map;sliderItems.forEach((item=>{const folder=item.getAttribute("data-folder"),groupKey=item.getAttribute("data-variety-group"),label=item.getAttribute("data-display-name")||folder,order=Number(item.getAttribute("data-variety-order"))||0;groupKey&&folder&&(groups.has(groupKey)||groups.set(groupKey,{entries:[],currentIndex:0}),groups.get(groupKey).entries.push({folder:folder,label:label,order:order}),folderToGroup.set(folder,groupKey))})),groups.forEach((group=>{group.entries.sort(((a,b)=>a.order-b.order))})),state.variety.groups=groups,state.variety.folderToGroup=folderToGroup}(),state.slider=new Slider(state.dom.slider,{containers:{sliderContainer:state.dom.sliderContainer,mobileView:state.dom.mobileView,chooseMiasma:state.dom.chooseMiasma,notes:state.dom.notes},controls:state.dom.controls,onSlideComplete:updateButtons,onFolderChange:(_,sliderInstance)=>updateButtons(sliderInstance)}),function(){const{controls:controls,switchVariety:switchVarietyButton}=state.dom;safeAddListener(controls.prevSlide,"click",(()=>state.slider.prev())),safeAddListener(controls.nextSlide,"click",(()=>state.slider.next())),safeAddListener(controls.prevButton,"click",(()=>state.slider.prev())),safeAddListener(controls.nextButton,"click",(()=>state.slider.next())),safeAddListener(switchVarietyButton,"click",(()=>switchVariety())),window.addEventListener("keydown",(event=>{state.slider&&("ArrowRight"===event.code?(state.slider.next(),event.preventDefault()):"ArrowLeft"===event.code&&(state.slider.prev(),event.preventDefault()))})),document.querySelectorAll("[data-searchFolder]").forEach((element=>{safeAddListener(element,"click",(function(){setCurrentFolder(this.getAttribute("data-searchFolder"))}))}))}();const folderFromUrl=window.location.pathname.replace(/\/$/,"").split("/miasma/")[1]||"";openTab(0,"game_notes"),setCurrentFolder(folderFromUrl,{updateHistory:!1}),window.addEventListener("popstate",handlePopState)})),window.changeFolder=(folder,options)=>function(folder,options){setCurrentFolder(folder,options)}(folder,options),window.openTab=(event,tabName)=>openTab(0,tabName),window.switchVariety=()=>switchVariety()}(window,document);